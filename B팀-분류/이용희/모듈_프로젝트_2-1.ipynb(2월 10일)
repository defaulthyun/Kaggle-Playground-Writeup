{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1h-J6WLEg8ESRqkVi_rW13Zge4mDYBc24","authorship_tag":"ABX9TyNx8SG/ceIS9Mpy5fEmUv0a"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# 모듈, 데이터 가져오기\n"],"metadata":{"id":"d-FLH2_1owJ6"}},{"cell_type":"code","execution_count":63,"metadata":{"id":"XlIJKECkodLO","executionInfo":{"status":"ok","timestamp":1675996071296,"user_tz":-540,"elapsed":640,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"outputs":[],"source":["# 모듈\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import matplotlib.gridspec as gridspec\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import OrdinalEncoder\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import mean_squared_error,roc_auc_score,roc_curve\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import confusion_matrix\n","%matplotlib inline"]},{"cell_type":"code","source":["# 버전확인\n","import sklearn\n","sklearn.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"4R0uGutAqDtQ","executionInfo":{"status":"ok","timestamp":1675996071934,"user_tz":-540,"elapsed":15,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"aad5f14c-5c76-4cab-e2ec-b9faff5e18df"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'0.23.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["# id 컬럼은 인덱스 정도 의미\n","train      = pd.read_csv( '/content/drive/MyDrive/cloud_ai/모듈_프로젝트_2/ep.2/res/train (1).csv')\n","test       = pd.read_csv( '/content/drive/MyDrive/cloud_ai/모듈_프로젝트_2/ep.2/res/test (1).csv')\n","submission = pd.read_csv( '/content/drive/MyDrive/cloud_ai/모듈_프로젝트_2/ep.2/res/sample_submission (1).csv')\n","orig_df    = pd.read_csv( '/content/drive/MyDrive/cloud_ai/모듈_프로젝트_2/ep.2/res/healthcare-dataset-stroke-data.csv' )"],"metadata":{"id":"p8f9n3bpo0jV","executionInfo":{"status":"ok","timestamp":1675996071935,"user_tz":-540,"elapsed":15,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["train.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"hprJho0RpVA8","executionInfo":{"status":"ok","timestamp":1675996071935,"user_tz":-540,"elapsed":14,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"36f43408-971b-465b-d7fb-74a2fa024c90"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id gender   age  hypertension  heart_disease ever_married work_type  \\\n","0   0   Male  28.0             0              0          Yes   Private   \n","1   1   Male  33.0             0              0          Yes   Private   \n","\n","  Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n","0          Urban              79.53  31.1     never smoked       0  \n","1          Rural              78.44  23.9  formerly smoked       0  "],"text/html":["\n","  <div id=\"df-3b6671a5-eea9-41e5-a34d-16b1ce8142e0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Male</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>79.53</td>\n","      <td>31.1</td>\n","      <td>never smoked</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Male</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Rural</td>\n","      <td>78.44</td>\n","      <td>23.9</td>\n","      <td>formerly smoked</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b6671a5-eea9-41e5-a34d-16b1ce8142e0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b6671a5-eea9-41e5-a34d-16b1ce8142e0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b6671a5-eea9-41e5-a34d-16b1ce8142e0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["test.head(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"0u6PdA6Nppal","executionInfo":{"status":"ok","timestamp":1675996072620,"user_tz":-540,"elapsed":697,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"3a171243-4ba3-4939-f4ee-53c0ee8b93e6"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      id  gender   age  hypertension  heart_disease ever_married work_type  \\\n","0  15304  Female  57.0             0              0          Yes   Private   \n","1  15305    Male  70.0             1              0          Yes   Private   \n","\n","  Residence_type  avg_glucose_level   bmi smoking_status  \n","0          Rural              82.54  33.4        Unknown  \n","1          Urban              72.06  28.5        Unknown  "],"text/html":["\n","  <div id=\"df-df498f49-5b0a-477c-ab31-7f52f4c1e73e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15304</td>\n","      <td>Female</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Rural</td>\n","      <td>82.54</td>\n","      <td>33.4</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15305</td>\n","      <td>Male</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>Urban</td>\n","      <td>72.06</td>\n","      <td>28.5</td>\n","      <td>Unknown</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df498f49-5b0a-477c-ab31-7f52f4c1e73e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-df498f49-5b0a-477c-ab31-7f52f4c1e73e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-df498f49-5b0a-477c-ab31-7f52f4c1e73e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["train.shape, test.shape, submission.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"awtcWIZQpWeJ","executionInfo":{"status":"ok","timestamp":1675996072621,"user_tz":-540,"elapsed":54,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"e70cb5c3-40d1-4320-9b73-0031c4316344"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((15304, 12), (10204, 11), (10204, 2))"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# 원본데이터 + train 데이터\n","train_all_df = pd.concat([train, orig_df]).reset_index(drop=True)"],"metadata":{"id":"Kihls0nT2hJ3","executionInfo":{"status":"ok","timestamp":1675996072622,"user_tz":-540,"elapsed":52,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["train.shape, train_all_df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hNdBm2VW2srN","executionInfo":{"status":"ok","timestamp":1675996072622,"user_tz":-540,"elapsed":50,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"c0d7a537-0aff-4a61-f3ff-fcf612919462"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((15304, 12), (20414, 12))"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["train_all_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b5dxup5q21JE","executionInfo":{"status":"ok","timestamp":1675996072623,"user_tz":-540,"elapsed":45,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"97f21297-aa90-4eaa-a6d3-6b859e1c6884"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20414 entries, 0 to 20413\n","Data columns (total 12 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   id                 20414 non-null  int64  \n"," 1   gender             20414 non-null  object \n"," 2   age                20414 non-null  float64\n"," 3   hypertension       20414 non-null  int64  \n"," 4   heart_disease      20414 non-null  int64  \n"," 5   ever_married       20414 non-null  object \n"," 6   work_type          20414 non-null  object \n"," 7   Residence_type     20414 non-null  object \n"," 8   avg_glucose_level  20414 non-null  float64\n"," 9   bmi                20213 non-null  float64\n"," 10  smoking_status     20414 non-null  object \n"," 11  stroke             20414 non-null  int64  \n","dtypes: float64(3), int64(4), object(5)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["# id(단순의미용) 컬럼 제거\n","train_all_df = train_all_df.drop(['id'],axis=1)\n","test         = test.drop(['id'],axis=1)\n","submission   = submission.drop(['id'],axis=1)"],"metadata":{"id":"9kkz9LsW2864","executionInfo":{"status":"ok","timestamp":1675996072623,"user_tz":-540,"elapsed":40,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["train_all_df.shape, test.shape, submission.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1qaYsCedHvKI","executionInfo":{"status":"ok","timestamp":1675996072624,"user_tz":-540,"elapsed":40,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"9f7f6a46-bcc8-4b5c-be61-d4b6dd195467"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((20414, 11), (10204, 10), (10204, 1))"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# 타입 확인\n","train_all_df.dtypes\n","# gender, ever_married, work_type, Residence_type, smoking_status => 문자형\n","# age, hypertension, heart_disease, avg_glucose_level, bmi, stroke => 수치형                         , "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hts8QIsKp1eN","executionInfo":{"status":"ok","timestamp":1675996072624,"user_tz":-540,"elapsed":36,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"7828bf6b-45fb-4287-bec0-8e08d920e7b1"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender                object\n","age                  float64\n","hypertension           int64\n","heart_disease          int64\n","ever_married          object\n","work_type             object\n","Residence_type        object\n","avg_glucose_level    float64\n","bmi                  float64\n","smoking_status        object\n","stroke                 int64\n","dtype: object"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["# test 데이터를 예측해서 submission의 stroke 컬럼에 채운다 . 기본값 0.0412\n","submission.columns\n","submission.head(), submission.stroke.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yBQTLtAyp5Po","executionInfo":{"status":"ok","timestamp":1675996072625,"user_tz":-540,"elapsed":33,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"6fe3aa3e-f706-4273-89e2-f0b9849c207d"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(     stroke\n"," 0  0.041296\n"," 1  0.041296\n"," 2  0.041296\n"," 3  0.041296\n"," 4  0.041296, array([0.04129639]))"]},"metadata":{},"execution_count":75}]},{"cell_type":"markdown","source":["# 데이터 준비 + EDA (분석, 피처엔지니어링 대상및 처리내용 체크)"],"metadata":{"id":"diLCi5zpqI7r"}},{"cell_type":"markdown","source":["## 피처 요약 함수 구성 - 차후 계속 사용(업그레이드)"],"metadata":{"id":"WPaOZuTWqKA8"}},{"cell_type":"code","source":["def summary_feature_info( df, train_all_df = train_all_df ):\n","    '''\n","      # 피처 요약 정보 생성하는 함수 구성 -> 피처를 빠르게 파악할수 있다\n","      # 전체 데이터 : 볼륨(형상) -> print()\n","      # 피처별 : 피처명, 타입,  결측치수, 고유값수, 샘플값0~2(0,1,2개정도) => DF로 구성 출력\n","      # 피처를 파악해 보겠다\n","    '''\n","    sum_df = pd.DataFrame( train_all_df.dtypes, columns=['type'])   \n","    # 인덱스 -> 컬럼으로 이동\n","    sum_df = sum_df.reset_index()\n","    # 컬럼명 index -> feature_name 변경\n","    sum_df.rename( columns={ 'index':'feature_name' }, inplace=True)\n","\n","    # 결측치수\n","    sum_df['결측치수'] = train_all_df.isnull().sum().values\n","\n","    # 고유값수\n","    sum_df['고유값수'] = train_all_df.nunique().values\n","\n","    # 샘플값0~2(0,1,2개정도)\n","    sum_df['샘플값0'] = train_all_df.loc[0].values\n","    sum_df['샘플값1'] = train_all_df.loc[1].values\n","    sum_df['샘플값2'] = train_all_df.loc[2].values\n","\n","    return sum_df\n","\n","summary_df = summary_feature_info( train_all_df )\n","summary_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"zlvTVM7dq0Wl","executionInfo":{"status":"ok","timestamp":1675996072625,"user_tz":-540,"elapsed":29,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"ad394244-1ec2-4dcc-9b9b-0ef9b4e75d12"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         feature_name     type  결측치수  고유값수          샘플값0             샘플값1  \\\n","0              gender   object     0     3          Male             Male   \n","1                 age  float64     0   106          28.0             33.0   \n","2        hypertension    int64     0     2             0                0   \n","3       heart_disease    int64     0     2             0                0   \n","4        ever_married   object     0     2           Yes              Yes   \n","5           work_type   object     0     5       Private          Private   \n","6      Residence_type   object     0     2         Urban            Rural   \n","7   avg_glucose_level  float64     0  4644         79.53            78.44   \n","8                 bmi  float64   201   440          31.1             23.9   \n","9      smoking_status   object     0     4  never smoked  formerly smoked   \n","10             stroke    int64     0     2             0                0   \n","\n","       샘플값2  \n","0    Female  \n","1      42.0  \n","2         0  \n","3         0  \n","4       Yes  \n","5   Private  \n","6     Rural  \n","7     103.0  \n","8      40.3  \n","9   Unknown  \n","10        0  "],"text/html":["\n","  <div id=\"df-7fe2d00d-e557-40d2-8ab0-f0b1423f8b76\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature_name</th>\n","      <th>type</th>\n","      <th>결측치수</th>\n","      <th>고유값수</th>\n","      <th>샘플값0</th>\n","      <th>샘플값1</th>\n","      <th>샘플값2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>gender</td>\n","      <td>object</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Male</td>\n","      <td>Male</td>\n","      <td>Female</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>age</td>\n","      <td>float64</td>\n","      <td>0</td>\n","      <td>106</td>\n","      <td>28.0</td>\n","      <td>33.0</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>hypertension</td>\n","      <td>int64</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>heart_disease</td>\n","      <td>int64</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ever_married</td>\n","      <td>object</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>work_type</td>\n","      <td>object</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>Private</td>\n","      <td>Private</td>\n","      <td>Private</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Residence_type</td>\n","      <td>object</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Urban</td>\n","      <td>Rural</td>\n","      <td>Rural</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>avg_glucose_level</td>\n","      <td>float64</td>\n","      <td>0</td>\n","      <td>4644</td>\n","      <td>79.53</td>\n","      <td>78.44</td>\n","      <td>103.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>bmi</td>\n","      <td>float64</td>\n","      <td>201</td>\n","      <td>440</td>\n","      <td>31.1</td>\n","      <td>23.9</td>\n","      <td>40.3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>smoking_status</td>\n","      <td>object</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>never smoked</td>\n","      <td>formerly smoked</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>stroke</td>\n","      <td>int64</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fe2d00d-e557-40d2-8ab0-f0b1423f8b76')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7fe2d00d-e557-40d2-8ab0-f0b1423f8b76 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7fe2d00d-e557-40d2-8ab0-f0b1423f8b76');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"markdown","source":["## 피처 요약 기준 해석및 전략 수립"],"metadata":{"id":"e3QcGiLXsV2X"}},{"cell_type":"markdown","source":["### 문자형\n","\n","- gender, ever_married, work_type, Residence_type, smoking_status "],"metadata":{"id":"dKJ6YwrUtHbI"}},{"cell_type":"code","source":["# 고유값 확인\n","train_all_df['gender'].unique()             # gender         : ['Male', 'Female', 'Other']  => Other를 Male or Female로 변경해야할듯?\n","train_all_df['ever_married'].unique()       # ever_married   : ['Yes', 'No']\n","train_all_df['work_type'].unique()          # work_type      : ['Private', 'Self-employed', 'Govt_job', 'children', 'Never_worked']\n","train_all_df['Residence_type'].unique()     # Residence_type : ['Urban', 'Rural']\n","train_all_df['smoking_status'].unique()     # smoking_status : ['never smoked', 'formerly smoked', 'Unknown', 'smokes']\n","\n","# 문자형 데이터는 수치형 데이터로 변환해야한다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"83QTfWyGsq_M","executionInfo":{"status":"ok","timestamp":1675996072626,"user_tz":-540,"elapsed":29,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"7a3d38a9-f98d-41a7-de43-b37e6c26da8b"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['never smoked', 'formerly smoked', 'Unknown', 'smokes'],\n","      dtype=object)"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["# 성별 카운트\n","pd.crosstab(\n","    index=train_all_df['gender'],\n","    columns='gd_cnts'\n",")\n","# Other 값이 2개이기 때문에 Male or Female로 변경"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"ocT36_OlV0Y9","executionInfo":{"status":"ok","timestamp":1675996072626,"user_tz":-540,"elapsed":25,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"61675a80-9904-44f6-e352-b6aa1c30f4af"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["col_0   gd_cnts\n","gender         \n","Female    12440\n","Male       7972\n","Other         2"],"text/html":["\n","  <div id=\"df-dabe5121-36d3-4d03-bc3c-518d6faba8a1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>col_0</th>\n","      <th>gd_cnts</th>\n","    </tr>\n","    <tr>\n","      <th>gender</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Female</th>\n","      <td>12440</td>\n","    </tr>\n","    <tr>\n","      <th>Male</th>\n","      <td>7972</td>\n","    </tr>\n","    <tr>\n","      <th>Other</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dabe5121-36d3-4d03-bc3c-518d6faba8a1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dabe5121-36d3-4d03-bc3c-518d6faba8a1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dabe5121-36d3-4d03-bc3c-518d6faba8a1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["# Other 값이 존재하는 행 찾기\n","train_all_df[train_all_df['gender'].str.contains('Other')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"q1iQhhmTUTdb","executionInfo":{"status":"ok","timestamp":1675996072627,"user_tz":-540,"elapsed":25,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"e4e5ce30-3ae8-4847-cf55-67ea31a9c21c"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      gender   age  hypertension  heart_disease ever_married work_type  \\\n","9363   Other   9.0             0              0           No  children   \n","18420  Other  26.0             0              0           No   Private   \n","\n","      Residence_type  avg_glucose_level   bmi   smoking_status  stroke  \n","9363           Rural              96.04  18.0          Unknown       0  \n","18420          Rural             143.33  22.4  formerly smoked       0  "],"text/html":["\n","  <div id=\"df-47c41bda-5ef5-492a-a02c-3ebce6860ef0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>Residence_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>bmi</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>9363</th>\n","      <td>Other</td>\n","      <td>9.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>Rural</td>\n","      <td>96.04</td>\n","      <td>18.0</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18420</th>\n","      <td>Other</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Private</td>\n","      <td>Rural</td>\n","      <td>143.33</td>\n","      <td>22.4</td>\n","      <td>formerly smoked</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47c41bda-5ef5-492a-a02c-3ebce6860ef0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-47c41bda-5ef5-492a-a02c-3ebce6860ef0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-47c41bda-5ef5-492a-a02c-3ebce6860ef0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["# Other 값을 Male로 변경\n","train_all_df.loc[9363, 'gender'] = 'Male'"],"metadata":{"id":"Y_hKqbocTgTd","executionInfo":{"status":"ok","timestamp":1675996072627,"user_tz":-540,"elapsed":24,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["train_all_df.loc[18420, 'gender'] = 'Male'"],"metadata":{"id":"__jlWSOn7MnL","executionInfo":{"status":"ok","timestamp":1675996072627,"user_tz":-540,"elapsed":24,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["train_all_df['gender'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lK9WjJ_K7Oo4","executionInfo":{"status":"ok","timestamp":1675996072627,"user_tz":-540,"elapsed":23,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"930e99fc-28f3-4b99-ca28-4e10c5dd28c9"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Male', 'Female'], dtype=object)"]},"metadata":{},"execution_count":82}]},{"cell_type":"markdown","source":["### 수치형\n","\n","- age, hypertension, heart_disease, avg_glucose_level, bmi, stroke"],"metadata":{"id":"6NleqDVqvtMD"}},{"cell_type":"code","source":["train_all_df['age'].describe()                # age               : 범주형?\n","train_all_df['hypertension'].unique()         # hypertension      : [0, 1]\n","train_all_df['heart_disease'].unique()        # heart_disease     : [0, 1]\n","train_all_df['avg_glucose_level'].describe()  # avg_glucose_level : 범주형?\n","train_all_df['bmi'].describe()                # bmi               : 범주형?\n","# train_all_df['stroke'].unique()             # stroke            : [0, 1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cLhGnyjPwB3f","executionInfo":{"status":"ok","timestamp":1675996072628,"user_tz":-540,"elapsed":21,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"a4da26c5-2596-4622-cb62-256be41e3be6"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    20213.000000\n","mean        28.302280\n","std          7.021765\n","min         10.300000\n","25%         23.500000\n","50%         27.700000\n","75%         32.200000\n","max         97.600000\n","Name: bmi, dtype: float64"]},"metadata":{},"execution_count":83}]},{"cell_type":"code","source":["num_cols = ['age', 'avg_glucose_level', 'bmi']\n","cat_cols = ['gender', 'ever_married', 'work_type', 'Residence_type', 'smoking_status', 'hypertension','heart_disease']\n","cat_cols_v1 = ['gender', 'ever_married', 'Residence_type', 'hypertension', 'heart_disease']   # 이진 피처\n","cat_cols_v2 = ['work_type', 'smoking_status']  # 피처 고유값 3개 이상"],"metadata":{"id":"W_dG86TKy90T","executionInfo":{"status":"ok","timestamp":1675996072628,"user_tz":-540,"elapsed":19,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":84,"outputs":[]},{"cell_type":"markdown","source":["## 데이터 시각화를 통한 분석"],"metadata":{"id":"kclyK4_3yLWx"}},{"cell_type":"markdown","source":["### 타겟(정답) 값 분포"],"metadata":{"id":"9B5j6Aayye-R"}},{"cell_type":"code","source":["sns.countplot( data=train_all_df, x='stroke' );\n","# 둘 사이에 비율 => 0의 개수 / 1의 개수 "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"5GhXrz0Oyf7A","executionInfo":{"status":"ok","timestamp":1675996073215,"user_tz":-540,"elapsed":605,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"55f6cab9-e463-420f-f8f3-4d96b6e5261f"},"execution_count":85,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 타겟값 1에 비해 타겟값 0은 22.171배 많이 분포한다 \n","# -> 범주형변수의 고유값별로 타겟값의 비율을 유지하는가? (어느정도)\n","c0, c1 = np.unique( train_all_df.stroke.values,  return_counts=True)[1]\n","c0 / c1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QKdLctusyf85","executionInfo":{"status":"ok","timestamp":1675996073216,"user_tz":-540,"elapsed":24,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"da33adc9-3d50-4c8d-fbe2-5a74fd5880d6"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["22.17139614074915"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["# 향후 시각화 자료에 비율을 표기하는 부분을 추가 => 텍스트 드로잉\n","def show_text_percent_by_stroke( ax, total_count, is_show=True,  ):\n","  '''\n","    is_show : True일대만 텍스트가 노출되게 처리\n","    ax : 텍스트를 그리고자 하는 차트의 축정보\n","    total_count : 전체 카운트수\n","  '''\n","  persents = list()         # 비율을 담는 그릇\n","  # 카운트 플롯 차트상에 개별 박스 정보를 구하는 방법 -> ax.patches\n","\n","  # 카운트 플롯 차트상에서 순차적으로 박스를 하나식 추출한다\n","  for patch in ax.patches: # 차트상에 존재하는 모든 형태의 도형을 차례대로 추출하는 연속형 변수\n","    w = patch.get_width()  # 타겟값 0 혹은 1, 카운트 플롯의 개별 박스 너비\n","    h = patch.get_height() # 타겟값 0 혹은 1의 카운트수 -> 카운트 플롯의 개별 박스 높이->카운트\n","    p = h/total_count * 100 # 타깃값의 비율 = (개별박스의 높이(카운트) / 전체카운트)*100\n","    persents.append( p )\n","    # 텍스트 그리기\n","    # 좌표 정보 획득\n","    l = patch.get_x()    # 도형 왼쪽 테투리 X축의 기준 위치값    \n","    ax.text(  x=l + w/2,  # 도형의 정 가운데를 X축 좌표\n","              y=h + total_count*0.005, # 1, total_count(가변값)의 특정 비율로 올려서 위치를 조정\n","              s=f'{p:1.1f}%', # 타겟값의 비율을 개별 차트내 도형 위에 그려지는 내용 ex) 38.8%\n","              ha='center'    # 정렬(가운데)\n","            )\n","  if is_show:\n","    if len(persents) == 2:   # 타겟용\n","      print( '타겟값간 비율', persents[0]/persents[1] )\n","    elif len(persents) == 4: # 이진 피처용\n","      # print( persents )\n","      # 타겟값에 맞춰서 도형이 그려진다 0번 타겟이 먼저 그려지고, 1번 타겟이 나중에 그려진다\n","      print( persents[0]/persents[2], persents[1]/persents[3] )\n","  pass\n","\n","ax = sns.countplot( data=train_all_df, x='stroke');\n","show_text_percent_by_stroke( ax, train_all_df.shape[0] )\n","ax.set_title('Stroke Value Distribution')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"GA8WlDh3yqr_","executionInfo":{"status":"ok","timestamp":1675996073216,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"747728e7-9b44-4d80-d873-5816fc9ec75e"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["타겟값간 비율 22.171396140749152\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Stroke Value Distribution')"]},"metadata":{},"execution_count":87},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### 이진형 피처 분포"],"metadata":{"id":"_hyCxBVy4qs8"}},{"cell_type":"code","source":["cat_cols_v1 = ['gender', 'ever_married', 'Residence_type', 'hypertension', 'heart_disease']   # 이진 피처\n","for cat_col_v1 in cat_cols_v1:\n","\n","  ax = sns.countplot( data=train_all_df, x=cat_col_v1, hue='stroke' );\n","  show_text_percent_by_stroke( ax, train_all_df.shape[0] )\n","  ax.set_title(f'{ cat_col_v1 }\\'s Value Distribution')\n","  plt.show()\n","\n","  # gender         : 남성보다 여성의 발병률이 더 높다\n","  # ever_married   : 기혼자의 발병률이 미혼자의 발병률보다 더 높다\n","  # Residence_type : 주거지역(도시, 시골)에 따른 발병률의 차이는 없는 것으로 보인다 => 굳이 필요한 데이터? 제거하는게 좋을 것 같다\n","  # hypertension   : 뇌졸중 환자 중 고혈압이 있는 사람보다 없는 사람이 더 많다\n","  # heart_disease  : 뇌졸중 환자 중 심장병이 있는 사람보다 없는 사람이 더 많다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"d9w9FiR44spJ","executionInfo":{"status":"ok","timestamp":1675996074295,"user_tz":-540,"elapsed":1092,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"452f6d87-00c3-4d34-b191-f10433db83d5"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["20.43548387096774 23.440078585461688\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["15.939580764488285 94.37142857142858\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["21.746666666666666 22.614849187935036\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["26.882096069868997 5.489690721649484\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["24.756510416666668 4.601769911504425\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### 명목형 피처 분포"],"metadata":{"id":"1OA_UAap5Y2a"}},{"cell_type":"code","source":["# cat_cols_v2 = ['work_type', 'smoking_status']\n","\n","pd.crosstab( train_all_df['work_type'], train_all_df['stroke'] )\n","# 카운트 표현 "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"wM_6fy_B5SOS","executionInfo":{"status":"ok","timestamp":1675996074296,"user_tz":-540,"elapsed":21,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"60c0fe77-a824-4399-8c73-46298217c200"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["stroke             0    1\n","work_type                \n","Govt_job        2088  102\n","Never_worked      64    0\n","Private        12124  553\n","Self-employed   2535  223\n","children        2722    3"],"text/html":["\n","  <div id=\"df-69d8fc00-77c2-42bc-8621-2590bc030e33\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>stroke</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>work_type</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Govt_job</th>\n","      <td>2088</td>\n","      <td>102</td>\n","    </tr>\n","    <tr>\n","      <th>Never_worked</th>\n","      <td>64</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Private</th>\n","      <td>12124</td>\n","      <td>553</td>\n","    </tr>\n","    <tr>\n","      <th>Self-employed</th>\n","      <td>2535</td>\n","      <td>223</td>\n","    </tr>\n","    <tr>\n","      <th>children</th>\n","      <td>2722</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69d8fc00-77c2-42bc-8621-2590bc030e33')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-69d8fc00-77c2-42bc-8621-2590bc030e33 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-69d8fc00-77c2-42bc-8621-2590bc030e33');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["# 백분율로 표현\n","# normalize 옵션 지정 => index or column을 지정하면 해당 기준으로 백분율 처리\n","cross_tab = pd.crosstab( train_all_df['work_type'], train_all_df['stroke'] , normalize='index' ) * 100\n","cross_tab"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"rvGZglt06jNq","executionInfo":{"status":"ok","timestamp":1675996074296,"user_tz":-540,"elapsed":19,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"cd867e52-ad2e-468f-c5f7-bc02e3203d93"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["stroke                  0         1\n","work_type                          \n","Govt_job        95.342466  4.657534\n","Never_worked   100.000000  0.000000\n","Private         95.637769  4.362231\n","Self-employed   91.914431  8.085569\n","children        99.889908  0.110092"],"text/html":["\n","  <div id=\"df-8d171af9-6dd8-4156-b4f8-971db7571bc3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>stroke</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","    <tr>\n","      <th>work_type</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Govt_job</th>\n","      <td>95.342466</td>\n","      <td>4.657534</td>\n","    </tr>\n","    <tr>\n","      <th>Never_worked</th>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Private</th>\n","      <td>95.637769</td>\n","      <td>4.362231</td>\n","    </tr>\n","    <tr>\n","      <th>Self-employed</th>\n","      <td>91.914431</td>\n","      <td>8.085569</td>\n","    </tr>\n","    <tr>\n","      <th>children</th>\n","      <td>99.889908</td>\n","      <td>0.110092</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d171af9-6dd8-4156-b4f8-971db7571bc3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8d171af9-6dd8-4156-b4f8-971db7571bc3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8d171af9-6dd8-4156-b4f8-971db7571bc3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["# 함수화\n","def make_cross_tab( df , feature_name ):\n","  cross_tab = pd.crosstab( df[feature_name], df['stroke'], normalize='index' ) * 100\n","  cross_tab.reset_index( inplace=True )\n","  return cross_tab\n","\n","cross_tab_v1 = make_cross_tab( train_all_df, 'work_type' )\n","cross_tab_v2 = make_cross_tab( train_all_df, 'smoking_status' )"],"metadata":{"id":"54yWpSN_796_","executionInfo":{"status":"ok","timestamp":1675996074296,"user_tz":-540,"elapsed":18,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["cross_tab_v1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"lb3FAd9dXCZ6","executionInfo":{"status":"ok","timestamp":1675996074297,"user_tz":-540,"elapsed":18,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"7f4125d1-5ab1-4443-8d0d-e19c5ccb69e1"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["stroke      work_type           0         1\n","0            Govt_job   95.342466  4.657534\n","1        Never_worked  100.000000  0.000000\n","2             Private   95.637769  4.362231\n","3       Self-employed   91.914431  8.085569\n","4            children   99.889908  0.110092"],"text/html":["\n","  <div id=\"df-53da79b9-d1ee-485a-8a7b-b00ed3befa19\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>stroke</th>\n","      <th>work_type</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Govt_job</td>\n","      <td>95.342466</td>\n","      <td>4.657534</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Never_worked</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Private</td>\n","      <td>95.637769</td>\n","      <td>4.362231</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Self-employed</td>\n","      <td>91.914431</td>\n","      <td>8.085569</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>children</td>\n","      <td>99.889908</td>\n","      <td>0.110092</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53da79b9-d1ee-485a-8a7b-b00ed3befa19')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-53da79b9-d1ee-485a-8a7b-b00ed3befa19 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-53da79b9-d1ee-485a-8a7b-b00ed3befa19');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["cross_tab_v2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"aB1TznanXDRM","executionInfo":{"status":"ok","timestamp":1675996074297,"user_tz":-540,"elapsed":17,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"70a23972-fc72-4fa9-9316-73703fc54d55"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["stroke   smoking_status          0         1\n","0               Unknown  97.453590  2.546410\n","1       formerly smoked  92.892613  7.107387\n","2          never smoked  95.754313  4.245687\n","3                smokes  94.884038  5.115962"],"text/html":["\n","  <div id=\"df-d3269d62-e12e-477e-b7ed-6d0c9cdc2dc0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>stroke</th>\n","      <th>smoking_status</th>\n","      <th>0</th>\n","      <th>1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Unknown</td>\n","      <td>97.453590</td>\n","      <td>2.546410</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>formerly smoked</td>\n","      <td>92.892613</td>\n","      <td>7.107387</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>never smoked</td>\n","      <td>95.754313</td>\n","      <td>4.245687</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>smokes</td>\n","      <td>94.884038</td>\n","      <td>5.115962</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3269d62-e12e-477e-b7ed-6d0c9cdc2dc0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3269d62-e12e-477e-b7ed-6d0c9cdc2dc0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3269d62-e12e-477e-b7ed-6d0c9cdc2dc0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"markdown","source":["#### 포인트 플롯 \n","\n","\n","- 정답 1에 대한 비율 포인트를 찍고, 포인트를 연결\n","- 이것을 통해 추세를 확인, **차이 확인(구분이되는가)**"],"metadata":{"id":"Zvx--YsB7PFQ"}},{"cell_type":"code","source":["cross_tab.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4GhwIdC-7TnJ","executionInfo":{"status":"ok","timestamp":1675996074297,"user_tz":-540,"elapsed":16,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"1cbcff43-5ed2-4d40-a962-de043d784863"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([0, 1], dtype='int64', name='stroke')"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["def show_pointplot(id,cross_tab, color, ax=None):\n","  if ax:\n","    sns.pointplot( x= id ,            # 피처값\n","                  y= 1,            # 정답 1에 대한 포인트 플롯\n","                  data=cross_tab,  # 그리는 대상 df \n","                  order= cross_tab[id],          # 포인트 플롯 순서 \n","                  color=color,     # 그리는 색상\n","                  ax=ax\n","                  );\n","show_pointplot_v1 = show_pointplot('work_type', cross_tab_v1, 'blue')\n","show_pointplot_v2 = show_pointplot('smoking_status', cross_tab_v2, 'blue')"],"metadata":{"id":"H5PshMKu7WeP","executionInfo":{"status":"ok","timestamp":1675996074298,"user_tz":-540,"elapsed":13,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":95,"outputs":[]},{"cell_type":"markdown","source":["#### 카운트 플롯 + 한개의 함수로 구성"],"metadata":{"id":"mUKAia7c7dnW"}},{"cell_type":"code","source":["import matplotlib.gridspec as gridspec # 격자 배치용"],"metadata":{"id":"cxJvSkxQ7Yrs","executionInfo":{"status":"ok","timestamp":1675996074298,"user_tz":-540,"elapsed":12,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["# cat_cols_v2 = ['work_type', 'smoking_status']\n","def show_count_point_plot( all_data, features, rows=3, cols=2 ):\n","  # 1개의 차트에 격자로 분할 -> 각 자리에 ax를 전달 -> 이것을 이용하여 그린다\n","  plt.figure( figsize=(15, 15) ) # 그리면서 조정 : 세로 3칸, 가로 2칸\n","  # 서브플롯 배치 \n","  p_grid = gridspec.GridSpec(rows, cols)  # 3줄, 2칸 => 차트 5개 => 피처가 5개\n","\n","  for idx, feature in enumerate( features ):\n","    ax = plt.subplot( p_grid[idx] )\n","    cross_tab = make_cross_tab( all_data, feature )\n","    # order를 사용 했으면 한차트에 사용되는 모든 함수는 같은 순서(order) 유지 해야 동일하게 배치됨\n","    sns.countplot( data=all_data, x=feature, ax=ax, order=cross_tab[feature] )  # ax=ax : 격자 안에서 특정 위치로 차트가 세팅\n","    show_text_percent_by_stroke( ax, all_data.shape[0] )\n","    ax.set_title(f'{ feature }\\'s Value Distribution')\n","    show_pointplot( feature, cross_tab, 'blue', ax.twinx() )\n","  plt.show()  \n","\n","show_count_point_plot( train_all_df, cat_cols_v2 )\n","\n","# work_type      : 발병률은 Self-employed, Govt_job, Private work_type, children, Never_worked 순으로 높다\n","# smoking_status : 발병률은 formerly smoked, smokes, never smoked, Unknown 순으로 높다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":338},"id":"S2D9SSXIRuQs","executionInfo":{"status":"ok","timestamp":1675996074960,"user_tz":-540,"elapsed":674,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"cb080aa5-87b1-4052-e954-ff5f90dbfcdc"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["0.7447693625351769 1.0989085948158253\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x1080 with 4 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["### 수치형 피처 분포"],"metadata":{"id":"92dqU5LEa468"}},{"cell_type":"code","source":["# age 피처\n","plt.figure(figsize=(10, 6))\n","\n","sns.set_palette('Set2')\n","\n","ax = sns.boxenplot(data=train_all_df, x='stroke', y='age')\n","ax.set_title('Age vs Stroke', fontdict={'fontsize': 16})\n","plt.show()\n","\n","# 뇌졸중이 있는 관측치의 대부분이 60세 이상인 반면 뇌졸중이 없는 관측치의 대부분은 60 미만이라는 것을 명확하게 볼 수 있다. 이 기능은 좋은 예측 변수가 될 수 있습니다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"uOKtr5HFbJM2","executionInfo":{"status":"ok","timestamp":1675996075772,"user_tz":-540,"elapsed":815,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"b2d6cfd8-60fe-4493-fed6-6ea50e7cce6b"},"execution_count":98,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# avg_glucose_level 피처\n","plt.figure(figsize=(10, 6))\n","\n","sns.set_palette('Set2')\n","\n","ax = sns.boxenplot(data=train_all_df, x='stroke', y='avg_glucose_level')\n","ax.set_title('Avg glucose level vs Stroke', fontdict={'fontsize': 16})\n","plt.show()\n","\n","# 포도당 수치가 높을수록 뇌졸중에 걸릴 확률이 높다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"FobbK2s_bL86","executionInfo":{"status":"ok","timestamp":1675996075773,"user_tz":-540,"elapsed":34,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"77b804c0-f27c-4ace-d306-b931e2713978"},"execution_count":99,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# bmi 피처\n","plt.figure(figsize=(10, 6))\n","\n","sns.set_palette('Set2')\n","\n","ax = sns.boxenplot(data=train_all_df, x='stroke', y='bmi')\n","ax.set_title('BMI vs Stroke', fontdict={'fontsize': 16})\n","plt.show()\n","\n","# Though many of observations with a negative stroke case have a lower bmi, \n","# it does seem to have a huge impact on the target variable because there are some observations who have too high bmi but still have a negative stroke case.\n","# 눈에 띄는 차이는 보이지 않는다. 굳이 필요할 데이터일까?"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"EOfAUcQUbr61","executionInfo":{"status":"ok","timestamp":1675996075774,"user_tz":-540,"elapsed":33,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"462efecd-95cd-44ee-9807-14829d60a0cc"},"execution_count":100,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x432 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## EDA 분석 결과"],"metadata":{"id":"aOlFQj7jdfpJ"}},{"cell_type":"markdown","source":["- 문자형 데이터 수치형으로 변환(인코딩) 해야함\n","- 타겟값 기준 약 22배"],"metadata":{"id":"oTD14sV1dgpV"}},{"cell_type":"markdown","source":["# 데이터 전처리"],"metadata":{"id":"BQdW_TNrh9To"}},{"cell_type":"code","source":["train_all_df.isnull().sum()\n","# bmi 피처에서 결측치가 201개 발견되었으나 위에서 봤을 때 bmi 피처는 크게 필요없었으므로 삭제 예정, Reisidence tyoe도 마찬가지."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5c88Ma1xvFIy","executionInfo":{"status":"ok","timestamp":1675996075774,"user_tz":-540,"elapsed":32,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"ef42bf47-c13f-4295-9366-d9f0040227b6"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender                 0\n","age                    0\n","hypertension           0\n","heart_disease          0\n","ever_married           0\n","work_type              0\n","Residence_type         0\n","avg_glucose_level      0\n","bmi                  201\n","smoking_status         0\n","stroke                 0\n","dtype: int64"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["# 'Residence_type'과 'bmi' 피처들은 모델에 도움이 될 것 같지 않다 => 삭제\n","train_all_df.drop(['Residence_type', 'bmi'], axis=1, inplace=True)\n","test.drop(['Residence_type', 'bmi'], axis=1, inplace=True)"],"metadata":{"id":"W05HscfZ-jes","executionInfo":{"status":"ok","timestamp":1675996075775,"user_tz":-540,"elapsed":28,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":102,"outputs":[]},{"cell_type":"code","source":["train_all_df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2kQWFgp1-66G","executionInfo":{"status":"ok","timestamp":1675996075775,"user_tz":-540,"elapsed":27,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"4f4848ac-4425-4249-c5d9-81bcdba842cc"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender               0\n","age                  0\n","hypertension         0\n","heart_disease        0\n","ever_married         0\n","work_type            0\n","avg_glucose_level    0\n","smoking_status       0\n","stroke               0\n","dtype: int64"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["train_all_df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IZW5jG8V_xJt","executionInfo":{"status":"ok","timestamp":1675996075776,"user_tz":-540,"elapsed":24,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"5f0ad36b-8c14-44cb-8081-f4a0e6907521"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender                object\n","age                  float64\n","hypertension           int64\n","heart_disease          int64\n","ever_married          object\n","work_type             object\n","avg_glucose_level    float64\n","smoking_status        object\n","stroke                 int64\n","dtype: object"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["num_cols = ['age', 'avg_glucose_level']\n","cat_cols_v1 = ['gender', 'ever_married', 'hypertension', 'heart_disease']\n","cat_cols_v2 = ['work_type', 'smoking_status']"],"metadata":{"id":"6AMD8-nR_09P","executionInfo":{"status":"ok","timestamp":1675996075777,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":105,"outputs":[]},{"cell_type":"code","source":["# 변환 처리 map() => 해당값에 일치되는 키가 발견되면 그 값으로 대체한다\n","train_all_df[ cat_cols_v1[0] ] = train_all_df[ cat_cols_v1[0] ].map( {'Male':1, 'Female':0})\n","train_all_df[ cat_cols_v1[1] ] = train_all_df[ cat_cols_v1[1] ].map( {'Yes':1 , 'No':0})\n","train_all_df[ cat_cols_v2[0] ] = train_all_df[ cat_cols_v2[0] ].map( {'Private':0, 'Self-employed': 1, 'Govt_job': 2, 'children': 3, 'Never_worked': 4}) #.astype('int')\n","train_all_df[ cat_cols_v2[1] ] = train_all_df[ cat_cols_v2[1] ].map( {'never smoked' : 0, 'formerly smoked': 1, 'smokes': 2, 'Unknown': 3}) #.astype('int')"],"metadata":{"id":"APvq9IEA_9aO","executionInfo":{"status":"ok","timestamp":1675996075778,"user_tz":-540,"elapsed":21,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":106,"outputs":[]},{"cell_type":"code","source":["train_all_df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BHhuae53ADmW","executionInfo":{"status":"ok","timestamp":1675996075778,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"72475423-9ec2-4721-b992-10cbbf873827"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["gender                 int64\n","age                  float64\n","hypertension           int64\n","heart_disease          int64\n","ever_married           int64\n","work_type              int64\n","avg_glucose_level    float64\n","smoking_status         int64\n","stroke                 int64\n","dtype: object"]},"metadata":{},"execution_count":107}]},{"cell_type":"markdown","source":["# 여기까지는 한거\n"],"metadata":{"id":"sbggSVq--bl8"}},{"cell_type":"code","source":["train_all_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"jZ1UlF2pF507","executionInfo":{"status":"ok","timestamp":1675996076200,"user_tz":-540,"elapsed":439,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"aaed6e13-9697-41c8-bc62-5956045db399"},"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       gender   age  hypertension  heart_disease  ever_married  work_type  \\\n","0           1  28.0             0              0             1          0   \n","1           1  33.0             0              0             1          0   \n","2           0  42.0             0              0             1          0   \n","3           1  56.0             0              0             1          0   \n","4           0  24.0             0              0             0          0   \n","...       ...   ...           ...            ...           ...        ...   \n","20409       0  80.0             1              0             1          0   \n","20410       0  81.0             0              0             1          1   \n","20411       0  35.0             0              0             1          1   \n","20412       1  51.0             0              0             1          0   \n","20413       0  44.0             0              0             1          2   \n","\n","       avg_glucose_level  smoking_status  stroke  \n","0                  79.53               0       0  \n","1                  78.44               1       0  \n","2                 103.00               3       0  \n","3                  64.87               0       0  \n","4                  73.36               0       0  \n","...                  ...             ...     ...  \n","20409              83.75               0       0  \n","20410             125.20               0       0  \n","20411              82.99               0       0  \n","20412             166.29               1       0  \n","20413              85.28               3       0  \n","\n","[20414 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-0b391529-a5bd-41d2-a04d-4f1b781a6872\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>79.53</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>78.44</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>42.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>103.00</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>56.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>64.87</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>73.36</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20409</th>\n","      <td>0</td>\n","      <td>80.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>83.75</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20410</th>\n","      <td>0</td>\n","      <td>81.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>125.20</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20411</th>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>82.99</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20412</th>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>166.29</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20413</th>\n","      <td>0</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>85.28</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20414 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b391529-a5bd-41d2-a04d-4f1b781a6872')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b391529-a5bd-41d2-a04d-4f1b781a6872 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b391529-a5bd-41d2-a04d-4f1b781a6872');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"vW-tVY3nGDmt","executionInfo":{"status":"ok","timestamp":1675996076200,"user_tz":-540,"elapsed":27,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"5a47fc91-ea77-4206-c70d-7fbc6f8c57d4"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       gender   age  hypertension  heart_disease ever_married work_type  \\\n","0      Female  57.0             0              0          Yes   Private   \n","1        Male  70.0             1              0          Yes   Private   \n","2      Female   5.0             0              0           No  children   \n","3      Female  56.0             0              0          Yes  Govt_job   \n","4        Male  32.0             0              0          Yes   Private   \n","...       ...   ...           ...            ...          ...       ...   \n","10199  Female  27.0             0              0           No   Private   \n","10200    Male  49.0             0              0          Yes   Private   \n","10201  Female   3.0             0              0           No  children   \n","10202    Male  31.0             0              0          Yes   Private   \n","10203  Female   2.0             0              0           No  children   \n","\n","       avg_glucose_level smoking_status  \n","0                  82.54        Unknown  \n","1                  72.06        Unknown  \n","2                 103.72        Unknown  \n","3                  69.24         smokes  \n","4                 111.15         smokes  \n","...                  ...            ...  \n","10199              75.77   never smoked  \n","10200             102.91        Unknown  \n","10201             104.04        Unknown  \n","10202              82.41   never smoked  \n","10203              85.12        Unknown  \n","\n","[10204 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-845e04b4-5cfa-47e3-a5a2-db1851ea99b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>82.54</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>72.06</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Female</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>103.72</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Female</td>\n","      <td>56.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Govt_job</td>\n","      <td>69.24</td>\n","      <td>smokes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>111.15</td>\n","      <td>smokes</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10199</th>\n","      <td>Female</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Private</td>\n","      <td>75.77</td>\n","      <td>never smoked</td>\n","    </tr>\n","    <tr>\n","      <th>10200</th>\n","      <td>Male</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>102.91</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>10201</th>\n","      <td>Female</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>104.04</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>10202</th>\n","      <td>Male</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Private</td>\n","      <td>82.41</td>\n","      <td>never smoked</td>\n","    </tr>\n","    <tr>\n","      <th>10203</th>\n","      <td>Female</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>children</td>\n","      <td>85.12</td>\n","      <td>Unknown</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10204 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-845e04b4-5cfa-47e3-a5a2-db1851ea99b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-845e04b4-5cfa-47e3-a5a2-db1851ea99b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-845e04b4-5cfa-47e3-a5a2-db1851ea99b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["# 변환 처리 map() => 해당값에 일치되는 키가 발견되면 그 값으로 대체한다\n","test[ cat_cols_v1[0] ] = test[ cat_cols_v1[0] ].map( {'Male':1, 'Female':0})\n","test[ cat_cols_v1[1] ] = test[ cat_cols_v1[1] ].map( {'Yes':1 , 'No':0})\n","test[ cat_cols_v2[0] ] = test[ cat_cols_v2[0] ].map( {'Private':0, 'Self-employed': 1, 'Govt_job': 2, 'children': 3, 'Never_worked': 4}) #.astype('int')\n","test[ cat_cols_v2[1] ] = test[ cat_cols_v2[1] ].map( {'never smoked' : 0, 'formerly smoked': 1, 'smokes': 2, 'Unknown': 3}) #.astype('int')"],"metadata":{"id":"RJKnzy6sGOWh","executionInfo":{"status":"ok","timestamp":1675996076200,"user_tz":-540,"elapsed":26,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":110,"outputs":[]},{"cell_type":"code","source":["test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"EtMi5QtxGRbU","executionInfo":{"status":"ok","timestamp":1675996076201,"user_tz":-540,"elapsed":26,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"52507e8f-42fe-42c4-8307-4c7ca5a657b0"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       gender   age  hypertension  heart_disease  ever_married  work_type  \\\n","0         0.0  57.0             0              0             1          0   \n","1         1.0  70.0             1              0             1          0   \n","2         0.0   5.0             0              0             0          3   \n","3         0.0  56.0             0              0             1          2   \n","4         1.0  32.0             0              0             1          0   \n","...       ...   ...           ...            ...           ...        ...   \n","10199     0.0  27.0             0              0             0          0   \n","10200     1.0  49.0             0              0             1          0   \n","10201     0.0   3.0             0              0             0          3   \n","10202     1.0  31.0             0              0             1          0   \n","10203     0.0   2.0             0              0             0          3   \n","\n","       avg_glucose_level  smoking_status  \n","0                  82.54               3  \n","1                  72.06               3  \n","2                 103.72               3  \n","3                  69.24               2  \n","4                 111.15               2  \n","...                  ...             ...  \n","10199              75.77               0  \n","10200             102.91               3  \n","10201             104.04               3  \n","10202              82.41               0  \n","10203              85.12               3  \n","\n","[10204 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-e40726a5-60f3-4249-9fe8-25dd54844181\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>57.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>82.54</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>70.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>72.06</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>5.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>103.72</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>56.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>69.24</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>111.15</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10199</th>\n","      <td>0.0</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>75.77</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10200</th>\n","      <td>1.0</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>102.91</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>10201</th>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>104.04</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>10202</th>\n","      <td>1.0</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>82.41</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10203</th>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>85.12</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10204 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e40726a5-60f3-4249-9fe8-25dd54844181')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e40726a5-60f3-4249-9fe8-25dd54844181 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e40726a5-60f3-4249-9fe8-25dd54844181');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["# scaler = MinMaxScaler()\n","train_all_df[['age', 'avg_glucose_level']] = MinMaxScaler().fit_transform(train_all_df[['age', 'avg_glucose_level']])\n","train_all_df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_LqaZqH-Ghnb","executionInfo":{"status":"ok","timestamp":1675996076201,"user_tz":-540,"elapsed":26,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"b1d03c7f-a6bf-4761-b77e-c8f1009f4e60"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender       age  hypertension  heart_disease  ever_married  work_type  \\\n","0       1  0.340820             0              0             1          0   \n","1       1  0.401855             0              0             1          0   \n","2       0  0.511719             0              0             1          0   \n","3       1  0.682617             0              0             1          0   \n","4       0  0.291992             0              0             0          0   \n","\n","   avg_glucose_level  smoking_status  stroke  \n","0           0.112686               0       0  \n","1           0.107654               1       0  \n","2           0.221032               3       0  \n","3           0.045010               0       0  \n","4           0.084203               0       0  "],"text/html":["\n","  <div id=\"df-93cc524d-851e-4a3e-9c86-8e856d15f06d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>smoking_status</th>\n","      <th>stroke</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.340820</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.112686</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.401855</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.107654</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.511719</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.221032</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.682617</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.045010</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0.291992</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.084203</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93cc524d-851e-4a3e-9c86-8e856d15f06d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-93cc524d-851e-4a3e-9c86-8e856d15f06d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-93cc524d-851e-4a3e-9c86-8e856d15f06d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["# scaler = MinMaxScaler()\n","test[['age', 'avg_glucose_level']] = MinMaxScaler().fit_transform(test[['age', 'avg_glucose_level']])\n","test.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HyB1VLEbGmj-","executionInfo":{"status":"ok","timestamp":1675996076202,"user_tz":-540,"elapsed":26,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"3f4f139b-8cc5-4e1b-f334-dd18392cfcc0"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender       age  hypertension  heart_disease  ever_married  work_type  \\\n","0     0.0  0.694824             0              0             1          0   \n","1     1.0  0.853516             1              0             1          0   \n","2     0.0  0.060059             0              0             0          3   \n","3     0.0  0.682617             0              0             1          2   \n","4     1.0  0.389648             0              0             1          0   \n","\n","   avg_glucose_level  smoking_status  \n","0           0.129047               3  \n","1           0.079725               3  \n","2           0.228727               3  \n","3           0.066453               2  \n","4           0.263695               2  "],"text/html":["\n","  <div id=\"df-89a13855-ef43-4103-bd0d-35411580e2da\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>age</th>\n","      <th>hypertension</th>\n","      <th>heart_disease</th>\n","      <th>ever_married</th>\n","      <th>work_type</th>\n","      <th>avg_glucose_level</th>\n","      <th>smoking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.694824</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.129047</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>0.853516</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.079725</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.060059</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0.228727</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.682617</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.066453</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.0</td>\n","      <td>0.389648</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.263695</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89a13855-ef43-4103-bd0d-35411580e2da')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-89a13855-ef43-4103-bd0d-35411580e2da button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-89a13855-ef43-4103-bd0d-35411580e2da');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["## smoking이랑 work type을 원핫인코딩을 해야할 것 같다"],"metadata":{"id":"Clp5zi32G0Ct","executionInfo":{"status":"ok","timestamp":1675996076202,"user_tz":-540,"elapsed":25,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["# 원핫 인코딩 처리 -> CSR 포멧 -> (300000, 25)\n","from sklearn.preprocessing import OneHotEncoder\n","\n","one_hot_feats = ['smoking_status', 'work_type']   # 'nom_0' ~ 'nom_5' 까지\n","print( one_hot_feats )\n","\n","enc_nom_train = OneHotEncoder().fit_transform( train_all_df[ one_hot_feats ] )\n","enc_nom_test = OneHotEncoder().fit_transform( test[ one_hot_feats ] )\n","enc_nom_train, enc_nom_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o6QdbdQIG0E7","executionInfo":{"status":"ok","timestamp":1675996076202,"user_tz":-540,"elapsed":25,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"cea63fe1-16c0-404d-b3b9-f71a6c4337d0"},"execution_count":115,"outputs":[{"output_type":"stream","name":"stdout","text":["['smoking_status', 'work_type']\n"]},{"output_type":"execute_result","data":{"text/plain":["(<20414x9 sparse matrix of type '<class 'numpy.float64'>'\n"," \twith 40828 stored elements in Compressed Sparse Row format>,\n"," <10204x9 sparse matrix of type '<class 'numpy.float64'>'\n"," \twith 20408 stored elements in Compressed Sparse Row format>)"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["enc_nom_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uZKPpAHBG0Ki","executionInfo":{"status":"ok","timestamp":1675996076203,"user_tz":-540,"elapsed":22,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"cb356385-360f-4afe-f990-27b2e879ba95"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<20414x9 sparse matrix of type '<class 'numpy.float64'>'\n","\twith 40828 stored elements in Compressed Sparse Row format>"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["from scipy import sparse\n","\n","final_train_data_csr = sparse.hstack( [\n","    sparse.csc_matrix(train[ one_hot_feats ]), # bin 피처 (300000, 5), df\n","    enc_nom_train,         # nom_0~4, CSR (300000x25)\n","], format='csr')\n","\n","final_train_data_csr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"NQN1iaKmG0MR","executionInfo":{"status":"error","timestamp":1675996076203,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}},"outputId":"f9d1f419-a80a-45b5-eb40-52ed9e4dc8ce"},"execution_count":117,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/base.py\u001b[0m in \u001b[0;36masformat\u001b[0;34m(self, format, copy)\u001b[0m\n\u001b[1;32m    321\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 322\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mconvert_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    323\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/coo.py\u001b[0m in \u001b[0;36mtocsc\u001b[0;34m(self, copy)\u001b[0m\n\u001b[1;32m    361\u001b[0m             \u001b[0mindices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0midx_dtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 362\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mupcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/sputils.py\u001b[0m in \u001b[0;36mupcast\u001b[0;34m(*args)\u001b[0m\n\u001b[1;32m     50\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'no supported conversion for types: %r'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: no supported conversion for types: (dtype('O'),)","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-117-3b0a1d8fcbbc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m final_train_data_csr = sparse.hstack( [\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0msparse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcsc_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m[\u001b[0m \u001b[0mone_hot_feats\u001b[0m \u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;31m# bin 피처 (300000, 5), df\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m     \u001b[0menc_nom_train\u001b[0m\u001b[0;34m,\u001b[0m         \u001b[0;31m# nom_0~4, CSR (300000x25)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m ], format='csr')\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/compressed.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, arg1, shape, dtype, copy)\u001b[0m\n\u001b[1;32m     83\u001b[0m                                  \"\".format(self.format))\n\u001b[1;32m     84\u001b[0m             \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mcoo\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcoo_matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 85\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_self\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcoo_matrix\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     86\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     87\u001b[0m         \u001b[0;31m# Read matrix dimensions given, if any\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/compressed.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, arg1, shape, dtype, copy)\u001b[0m\n\u001b[1;32m     32\u001b[0m                 \u001b[0marg1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     33\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 34\u001b[0;31m                 \u001b[0marg1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     35\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_self\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marg1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     36\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/base.py\u001b[0m in \u001b[0;36masformat\u001b[0;34m(self, format, copy)\u001b[0m\n\u001b[1;32m    322\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mconvert_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    323\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 324\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mconvert_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    325\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m     \u001b[0;31m###################################################################\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/coo.py\u001b[0m in \u001b[0;36mtocsc\u001b[0;34m(self, copy)\u001b[0m\n\u001b[1;32m    360\u001b[0m             \u001b[0mindptr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mN\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0midx_dtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    361\u001b[0m             \u001b[0mindices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0midx_dtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 362\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mupcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    363\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    364\u001b[0m             coo_tocsr(N, M, self.nnz, col, row, self.data,\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/scipy/sparse/sputils.py\u001b[0m in \u001b[0;36mupcast\u001b[0;34m(*args)\u001b[0m\n\u001b[1;32m     49\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'no supported conversion for types: %r'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: no supported conversion for types: (dtype('O'),)"]}]},{"cell_type":"code","source":[],"metadata":{"id":"d7Fr8XGRG0OU","executionInfo":{"status":"aborted","timestamp":1675996076204,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"r7hPq2dvG0QG","executionInfo":{"status":"aborted","timestamp":1675996076204,"user_tz":-540,"elapsed":19,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"LZJgyqblG0Rx","executionInfo":{"status":"aborted","timestamp":1675996076205,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1SO3rXeQG0Vt","executionInfo":{"status":"aborted","timestamp":1675996076205,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"czRki3IVG0X9","executionInfo":{"status":"aborted","timestamp":1675996076205,"user_tz":-540,"elapsed":20,"user":{"displayName":"이용희","userId":"13879488514588452083"}}},"execution_count":null,"outputs":[]}]}