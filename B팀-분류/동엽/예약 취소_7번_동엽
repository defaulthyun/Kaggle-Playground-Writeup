{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1oJ_WxI2KO8HGJguV6kwbklmspjfoOJgg","authorship_tag":"ABX9TyPaCtBUjqaWI76ePoCKCEUK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-Lj--Yl3rV1","executionInfo":{"status":"ok","timestamp":1676528277268,"user_tz":-540,"elapsed":36302,"user":{"displayName":"현동엽 (DawnHyun)","userId":"05264021299645047228"}},"outputId":"c96b7e9a-95bd-4f2b-9661-e3953fd805c7"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"9vSMJG0R34Et"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":390},"id":"mHOl1j-q1sEO","executionInfo":{"status":"error","timestamp":1676528282443,"user_tz":-540,"elapsed":502,"user":{"displayName":"현동엽 (DawnHyun)","userId":"05264021299645047228"}},"outputId":"c7e2380c-4e70-4ee5-fb5a-0f1c0b935fb8"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-ee2960804f10>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     28\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mxgboost\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mXGBClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mcatboost\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCatBoostClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mlightgbm\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLGBMClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'catboost'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["import math\n","import itertools\n","from operator import itemgetter\n","\n","import matplotlib.pyplot as plt\n","import matplotlib.ticker as ticker\n","\n","from sklearn.model_selection import KFold, StratifiedKFold, RandomizedSearchCV\n","from sklearn.metrics import roc_auc_score, RocCurveDisplay\n","\n","import pandas as pd\n","import numpy as np\n","import plotly.express as px\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from plotly.subplots import make_subplots\n","\n","\n","from sklearn.metrics import roc_auc_score\n","from sklearn.model_selection import train_test_split\n","\n","from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score\n","from sklearn.metrics import roc_auc_score\n","\n","\n","from xgboost import XGBClassifier\n","from catboost import CatBoostClassifier\n","from lightgbm import LGBMClassifier\n","\n","import matplotlib.gridspec as gridspec\n","import matplotlib as mpl\n","\n","from matplotlib import ticker\n","import time\n","import warnings\n","warnings.filterwarnings('ignore')"]}]}